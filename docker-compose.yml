version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: banking-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=simplebanking
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./src/main/resources/db/migration:/docker-entrypoint-initdb.d
    networks:
      - banking-network

  app:
    build: .
    container_name: banking-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/simplebanking
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - APP_RABBITMQ_LOGGING_ENABLED=true
    depends_on: #Uygulamanın PostgreSQL ve RabbitMQ servislerinden sonra başlamasını sağlıyoruz.
      - postgres
      - rabbitmq
    networks:
      - banking-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: banking-rabbitmq
    ports:
      - "5672:5672"  # AMQP port
      - "15672:15672"  # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - banking-network

volumes:
  postgres-data:
  rabbitmq-data:

networks:
  banking-network:
    driver: bridge 
